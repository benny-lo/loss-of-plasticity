import zipfile
import pickle
import matplotlib.pyplot as plt
import re
import yaml
from plot_util import save_plot, generate_pruned_string

def load_data_from_zip(zip_file_path, grad_files_in_zip):
    all_data = {}
    with zipfile.ZipFile(zip_file_path, 'r') as zf:
        for grad_file in grad_files_in_zip:
            if grad_file in zf.namelist():
                with zf.open(grad_file) as file:
                    data = pickle.load(file)
                    all_data[grad_file] = data
            else:
                print(f"File '{grad_file}' not found in the zip archive.")
    return all_data

def plot_data(all_data, save_path):
    plt.figure(figsize=(10, 7))
    for grad_file, data in all_data.items():
        keys = [int(k) for k in data.keys()]
        values = [tensor.item() for tensor in data.values()]
        label = generate_pruned_string(grad_file) or grad_file.split('/')[-1]
        plt.plot(keys, values, marker='o', linewidth=2, markersize=8, label=label)

    plt.xlabel('Task', fontsize=14)
    plt.ylabel('Parameter Overlap', fontsize=14)
    plt.title('Parameter Overlap Across Versions', fontsize=16)
    plt.legend(fontsize=12, loc='best')
    plt.grid(False)
    plt.tight_layout()
    save_plot(plt.gcf(), save_path)



def main():
    
    #We plot the overlap of the mask generated by high gradient parameters and of winning tickets.
    
    config_path = "plot_config.yaml"

    with open(config_path, "r") as file:
         config = yaml.safe_load(file)

    zip_file_plasticity_exp_path = config['zip_file_plasticity_exp_path']
    grad_files_in_zip = config['grad_files_in_zip']
    plot_path = config['imp_plot_path']

    all_data = load_data_from_zip(zip_file_plasticity_exp_path, grad_files_in_zip)

    plot_data(all_data, plot_path)


if __name__ == '__main__':
    main()
